Task 1
#!/bin/python3

import math
import os
import random
import re
import sys



if __name__ == '__main__':
    n = int(input().strip())
    # Task 1: py-if-else

if n % 2 == 1:
    print("Weird")
elif 2 <= n <= 5:
    print("Not Weird")
elif 6 <= n <= 20:
    print("Weird")
else:
    print("Not Weird")

task 2
if __name__ == '__main__':
    a = int(input())
    b = int(input())
    
    print(a+b)
    print(a-b)
    print(a*b)

Task 3

from itertools import groupby

s = input()

for key, group in groupby(s):
    count = len(list(group))
    print(f"({count}, {key})", end=' ')

Task 4
def minion_game(string):
    # your code goes here
    vowels = 'AEIOU'
    kevin_score = 0
    stuart_score = 0
    n = len(string)

    for i in range(n):
        if string[i] in vowels:
            kevin_score += n - i
        else:
            stuart_score += n - i

    if kevin_score > stuart_score:
        print("Kevin", kevin_score)
    elif stuart_score > kevin_score:
        print("Stuart", stuart_score)
    else:
        print("Draw")
    

if __name__ == '__main__':
    s = input()
    minion_game(s)

Task 5
def is_leap(year):
    leap = False
    
    # Write your logic here
    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
        return True
    else:
        return False


    
    return leap

year = int(input())

Task 6
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import combinations


n = int(input())
letters = input().split()
k = int(input())


all_combinations = list(combinations(letters, k))


count_with_a = sum(1 for comb in all_combinations if 'a' in comb)


probability = count_with_a / len(all_combinations)
print(f"{probability:.4f}")

Task 7
if __name__ == '__main__':
    n = int(raw_input())
    integer_list = map(int, raw_input().split())
    
    t = tuple(integer_list)
    print(hash(t))

Task 8
if __name__ == '__main__':
    n = int(input())
    student_marks = {}
    for _ in range(n):
        name, *line = input().split()
        scores = list(map(float, line))
        student_marks[name] = scores
    query_name = input()
    
    
    marks = student_marks[query_name]
    average = sum(marks) / len(marks)
    
    
    print(f"{average:.2f}")
Task 9
def print_formatted(number):
    # your code goes here
    width = len(bin(number)[2:])  # Get the width of the binary representation
    for i in range(1, number + 1):
        dec = str(i).rjust(width)
        octal = oct(i)[2:].rjust(width)
        hexa = hex(i)[2:].upper().rjust(width)
        binary = bin(i)[2:].rjust(width)
        print(f"{dec} {octal} {hexa} {binary}")


if __name__ == '__main__':
    n = int(input())
    print_formatted(n)






